services:
  gatewayems:
    build:
      context: ./gatewayEMS
      dockerfile: Dockerfile
    container_name: gateway_ems

    volumes:
      - ./gatewayEMS:/gatewayEMS
      - ./Shared/config.ini:/gatewayEMS/config/config.ini
      - ./Shared/gateway_ems.log:/gatewayEMS/log/gateway_ems.log
    networks:
      - networkEMS
    # devices:
    #   - /dev/ttyUSB0:/dev/ttyUSB0
    group_add:
      - dialout

  gatewayapi:
    build:
      context: ./gatewayApi
      dockerfile: Dockerfile
    container_name: api_ems
 
    volumes:
      - ./Shared/config.ini:/gatewayApi/src/config/config.ini
      - ./gatewayApi:/gatewayApi
      - ./Shared/gateway_ems.log:/gatewayApi/src/log/gateway_ems.log
    networks:
      - networkEMS
    # devices:
    #   # - /dev/ttyUSB0:/dev/ttyUSB0
    env_file:
      - .env
    environment:
      - API_HOST=${API_HOST}
      - API_PORT=${API_PORT}

    ports:
      - "${API_PORT}:8000"
    group_add:
      - dialout

    depends_on:
      - database_ems


  

  database_ems:
    image: mongo:4.2.18
    container_name: db_ems
    env_file:
      - .env
    ports:
      - "${db_port}:27017"
    environment:
      - db_port=${db_port}
      - MONGO_INITDB_ROOT_USERNAME=${db_user}
      - MONGO_INITDB_ROOT_PASSWORD=${db_password}
      - MONGO_INITDB_DATABASE=${db_name}
    volumes:
      - db_data:/data/db
    networks:
      - networkEMS

  web:
    build:
      context: ./WebServer
      dockerfile: Dockerfile
    container_name: web_ems
    env_file:
      - .env
    ports:
      - "${port}:3000"
    environment:
      - port=${port}
    networks:
      - networkEMS

volumes:
  db_data:

networks:
  networkEMS:
    driver: bridge
    